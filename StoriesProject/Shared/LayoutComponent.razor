@using Microsoft.JSInterop;
@using System.Net;
@inject NavigationManager _navigationManager;
@inject IJSRuntime _js;

@code {
    protected async Task HandleUnauthorizedException(Func<Task> action)
    {
        try
        {
            await action.Invoke();
        }
        catch (Exception ex)
        {
            if (ex is HttpRequestException httpException && httpException.StatusCode == HttpStatusCode.Unauthorized)
            {
                // Nếu là lỗi 401, chuyển hướng đến trang home
                _navigationManager.NavigateTo("/home");
            }
            else
            {
                // Xử lý các lỗi khác nếu cần
                // ...
            }
        }
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        await HandleUnauthorizedException(async () =>
        {
            await HandleAfterRenderAsync(firstRender);
        });

    }

    protected virtual async Task HandleAfterRenderAsync(bool firstRender)
    {
        // Custom logic for handling after render
    }
}
