@using Microsoft.JSInterop;
@using System.Net;
@inject NavigationManager _navigationManager;
@inject IJSRuntime _js;
@inherits BaseComponentCustom
@code {
    protected async Task HandleUnauthorizedException(bool firstRender)
    {
        try
        {
            await HandleAfterRenderAsync(firstRender);
        }
        catch (Exception ex)
        {
            if (ex is HttpRequestException httpException)
            {
                switch (httpException.StatusCode)
                {
                    case HttpStatusCode.Unauthorized:
                        // Nếu là lỗi 401, chuyển hướng đến trang home
                        _navigationManager.NavigateTo("/");
                        // đồng thời xóa token
                        await RemoveSessionStorage("token");
                        await RemoveSessionStorage("userInfor");
                        break;
                    case HttpStatusCode.Forbidden:
                        // Nếu là lỗi 403 thì xử lý show cảnh báo không có quyền
                        break;
                }
            }
        }
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        await HandleUnauthorizedException(firstRender);
    }

    /// <summary>
    /// Hàm xử lý nghiệp vụ cho phần afterRender
    /// </summary>
    /// <param name="firstRender"></param>
    /// <returns></returns>
    protected virtual async Task HandleAfterRenderAsync(bool firstRender) { }
}