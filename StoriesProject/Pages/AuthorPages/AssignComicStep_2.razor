@page "/author/assign-comic-step-2/{id}"
@using StoriesProject.Model.BaseEntity
@using StoriesProject.Services
@using StoriesProject.Shared.ComponentBase;
@inject IStoriesService _storiesService;
@inherits AuthorBaseComponent
<style>
    * {
        box-sizing: content-box;
    }

    .header-user-wrapper .search-box input {
        width: 250px;
        background: rgba(255, 255, 255, 0.34);
        border-radius: 18px;
        color: rgba(255, 255, 255, 0.8);
        padding: 11px 15px;
        border: none;
        font-size: 14px;
        line-height: 14px;
        height: 40px !important;
    }

    .user-selecteds a {
        border-left: 4px solid #00B798;
        padding-left: 43px !important;
        background: #F8F8F8 !important;
        color: #00B798 !important;
    }

    a:hover {
        color: #00b798;
    }

    dl dd a:hover {
        border-left: 4px solid #00B798 !important;
        padding-left: 43px !important;
        background: #F8F8F8 !important;
        color: #00B798 !important;
    }

    .center_selected {
        color: #00b798;
    }

    .user-right {
        float: right;
        width: 838px;
        margin: 20px 0 60px;
        border: 1px solid #DDD;
        min-height: 372px;
        background: #FFF;
    }

    .user-right {
        float: right;
        width: 838px;
        margin: 20px 0 60px;
        border: 1px solid #DDD;
        min-height: 372px;
        background: #FFF;
    }

        .user-right .user-right-top {
            width: 100%;
            border-bottom: 1px solid #DDD;
            height: 47px;
            overflow: hidden;
        }

            .user-right .user-right-top h3 {
                -webkit-margin-before: 0;
                -webkit-margin-after: 0;
                font-size: 18px;
                font-weight: normal;
                float: left;
                line-height: 48px;
                margin-left: 15px;
                margin-top: 0;
            }

    .step-nav {
        height: 36px;
        margin: 32px 0;
        padding-left: 254px;
        line-height: 36px;
        font-size: 18px;
        color: #ccc;
    }

        .step-nav .active {
            color: #00b798;
        }

        .step-nav .step-itm {
            float: left;
            margin-right: 60px;
        }

        .step-nav .active .num {
            background: #00b798;
        }

        .step-nav .num {
            display: inline-block;
            width: 36px;
            height: 36px;
            font-size: 20px;
            text-align: center;
            line-height: 36px;
            color: #fff;
            border-radius: 18px;
            background: #ccc;
        }

        .step-nav .active {
            color: #00b798;
        }

        .step-nav .step-itm {
            float: left;
            margin-right: 60px;
        }

    .layui-input-block {
        margin-left: 140px;
        line-height: 38px;
        min-height: 36px;
    }

    .clearfix:after {
        content: ".";
        display: block;
        height: 0;
        clear: both;
        visibility: hidden;
    }

    .step-box {
        padding: 0 30px;
        float: left;
        width: 80%;
    }

    .layui-form-item {
        margin-bottom: 15px;
        clear: both;
    }

    .step-box .input-box .layui-form-label {
        width: 110px;
        font-size: 14px;
        color: #2a2a2a;
    }

    .layui-form-item:after {
        content: '\20';
        clear: both;
        display: block;
        height: 0;
    }


    .layui-form-label {
        float: left;
        display: block;
        padding: 9px 15px;
        width: 80px;
        font-weight: 400;
        line-height: 20px;
        text-align: right;
    }

    .layui-form-label {
        position: relative;
    }

    label {
        cursor: default;
    }

    .step-box .input-box .layui-form-label i {
        color: #FF620E;
        display: inline-block;
        font-style: normal;
        box-sizing: content-box;
    }

    .layui-input-block .cover-y,
    .layui-input-block .cover-x {
        float: left;
        width: 90px;
        height: 120px;
        background: #f6f6f6;
        margin-right: 10px;
        position: relative;
    }

        .layui-input-block .cover-y > img,
        .layui-input-block .cover-x > img {
            width: 100%;
            height: 100%;
        }

        .layui-input-block .cover-y .btn,
        .layui-input-block .cover-x .btn {
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100%;
            height: 36px;
            text-align: center;
            color: #fff;
            background: rgba(0, 0, 0, 0.25);
            cursor: pointer;
        }

    .layui-input-block > .tip {
        line-height: 18px;
        font-size: 12px;
        color: #b4b4b4;
    }

    .layui-input-block .cover-y .btn,
    .layui-input-block .cover-x .btn {
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 36px;
        text-align: center;
        color: #fff;
        background: rgba(0, 0, 0, 0.25);
        cursor: pointer;
    }

    .layui-input,
    .layui-textarea {
        display: block;
        width: 100%;
        padding-left: 10px;
    }

    .layui-input,
    .layui-select,
    .layui-textarea {
        height: 38px;
        line-height: 1.3;
        line-height: 38px\9;
        border-width: 1px;
        border-style: solid;
        background-color: #fff;
        border-radius: 2px;
        -webkit-transition: all .3s;
    }

    .layui-form-label {
        float: left;
        display: block;
        padding: 9px 15px;
        width: 80px;
        font-weight: 400;
        line-height: 20px;
        text-align: right;
    }

    .layui-input-block .ticai-list,
    .layui-input-block .update-list {
        float: left;
        margin-right: 10px;
    }

    .layui-rate,
    li {
        list-style: none;
        display: list-item;
        text-align: -webkit-match-parent;
    }

    .layui-form-checkbox span {
        padding: 0 10px;
        font-size: 14px;
        border-radius: 2px 0 0 2px;
        background-color: #d2d2d2;
        color: #fff;
        overflow: hidden;
        height: auto;
        white-space: nowrap;
        text-overflow: ellipsis;
    }

    .step-box .input-box .protocol {
        overflow: hidden;
    }

        .step-box .input-box .protocol .layui-unselect {
            float: left;
        }

        .step-box .input-box .protocol a {
            text-decoration: underline;
            float: left;
            margin-top: 10px;
        }

    .layui-form-checkbox[lay-skin=primary] {
        height: auto !important;
        line-height: normal !important;
        border: none !important;
        margin-right: 0;
        padding-right: 0;
        background: 0 0;
    }

    /* CSS hiển thị modal */
    .modal {
        display: none;
        position: fixed;
        z-index: 1;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.5);
    }

    .modal-content {
        margin: auto;
        display: block;
        width: 50%;
        /* Chiều rộng của modal */
        max-width: 80%;
        /* Chiều rộng tối đa của modal */
        max-height: 90%;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }

        .modal-content img {
            width: 100%;
            /* Chiều rộng của ảnh trong modal */
            height: auto;
            /* Chiều cao tự động để giữ tỉ lệ khung hình */
        }

    /* CSS khác giữ nguyên */
    #imageContainer {
        display: flex;
        flex-wrap: wrap;
        width: 117%;
        border: 1px solid black;
    }

    .imageItem {
        position: relative;
        width: 135px;
        height: 180px;
        margin: 10px;
        overflow: hidden;
    }

        .imageItem img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .imageItem .overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 20%;
            background: rgba(0, 0, 0, 0.5);
            display: none;
            flex-direction: row;
            justify-content: space-between;
            align-items: flex-start;
            padding: 5px;
            box-sizing: border-box;
        }

        .imageItem:hover .overlay {
            display: flex;
        }

        .imageItem .overlay button {
            background: transparent;
            color: white;
            border: none;
            padding: 5px;
            cursor: pointer;
        }
</style>


<body class="page-history">
    <!-- 头部 -->

    <AuthorHeader />
    <AlertComponent @ref="@alertComponent"></AlertComponent>
    <div id="imageModal" class="modal">
        <span class="close">&times;</span>
        <div class="modal-content">
            <img id="modalImage">
        </div>
    </div>

    <!-- 内容 -->
    <div class="main-container">
        <AuthorSideBar isSelected="3" />

        <!-- main-content -->
        <div class="user-right">
            <div class="user-right-top">
                <h3>Tạo tác phẩm mới</h3>
            </div>
            <!--步骤-->
            <div class="step-nav clearfix">
                <div class="step-itm ">
                    <span class="num">1</span>
                    <span>Tạo thông tin cơ bản</span>
                </div>
                <div class="step-itm active">
                    <span class="num">2</span>
                    <span>Thêm chương mới</span>
                </div>
            </div>
            <!--步骤end-->
            <div class="step-box">
                <div class="input-box layui-form">
                    <div class="layui-form-item">
                        <label class="layui-form-label">Tên chương</label>
                        <div class="layui-input-block">
                            <input type="text" name="title" required lay-verify="required" placeholder="Nhập tên chương"
                                   autocomplete="off" class="layui-input" @bind="chapter.Name">
                        </div>
                    </div>
                    <div class="layui-form-item layui-form-text">
                        <label class="layui-form-label"><i>*</i>Giới thiệu: </label>
                        <div class="layui-input-block">
                            <textarea name="content" required="" lay-verify="required"
                                      placeholder="Giới thiệt qua về chương"
                                      class="layui-textarea" @bind="chapter.Description"></textarea>
                        </div>
                    </div>
                    <div id="imageContainer">
                        <div style="width: 100%;background-color: rgb(162 158 158);">
                            <p style="font-size: 20px;color: white;margin: 5px; ">Thêm ảnh cho chương </p>
                        </div>
                        <InputFile OnChange="HandleFileSelected" id="fileInput" style="display:none" @ref="fileInput" multiple max="100" />
                        <button style="width: 135px;height: 180px; margin: 10px;background-color: rgb(239, 230, 230);display: flex;justify-content: center;align-items: center;border: none;cursor: pointer;"
                                @onclick="() => addFile()">
                            <i class="fa-solid fa-file-circle-plus" style="color: white; font-size: 30px;"></i>
                        </button>
                    </div>

                    <div style="text-align: right;width: 118%; margin: 20px 0px;">
                        <button type="button" @onclick="() => AddChapters()"
                                style="padding: 10px 20px; background-color: #00B798; color: white; border: none; border-radius: 5px; cursor: pointer;">
                            Thêm chương
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>

@code {
    [Parameter]
    public string Id { get; set; }

    private InputFile fileInput;
    private List<IBrowserFile> listSelectedFile = new List<IBrowserFile>();
    private AddChapterVM chapter { get; set; } = new AddChapterVM();
    //alert
    private AlertComponent alertComponent;

    protected override async Task HandleAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await InvokeVoidAsync("blazorFunctions.setupImageHandling");
        }
    }
    public async Task addFile()
    {
        await InvokeVoidAsync("addFiles");
        StateHasChanged();
    }
    private async Task AddChapters()
    {
        if (chapter != null)
        {
            chapter.StoryId = Guid.Parse(Id);
            var res = await _storiesService.AddChapter(listSelectedFile, chapter);
            var isSuccess = false;
            if (res != null && res.IsSuccess)
            {
                isSuccess = true;
                alertComponent.Show("Thêm chương thành công", "success");
                await Task.Delay(2000);
                // NavigateToUrl($"/author/list-chapters/1");
                // reset form để thêm tiếp
                Thread.Sleep(2000);
                await InvokeVoidAsync("reload");
            }
            if (!isSuccess)
            {
                alertComponent.Show("Thêm chương thất bại", "error");
                Thread.Sleep(2000);
                await InvokeVoidAsync("reload");
            }
        }
    }

    private async Task HandleFileSelected(InputFileChangeEventArgs e)
    {   
        if (e.FileCount > 10)
        {
            alertComponent.Show("Bạn chỉ được chọn tối đa 10 file 1 lần. Vui lòng chọn lại", "error");
        }
        else
        {
            var files = e.GetMultipleFiles();
            listSelectedFile.AddRange(files);
        }
    }
}
