@page "/Admin/category_management"
@using StoriesProject.Model.BaseEntity
@using StoriesProject.Services
@using StoriesProject.Shared.ComponentBase;
@inject ITopicService _topicService;
@inherits AuthorBaseComponent
<body>
    <div class="wrapper">
        <AdminSidebar tab=3 />
        <div class="main">
            @*<nav class="navbar navbar-expand px-4 py-3">
            <form action="#" class="d-none d-sm-inline-block">

            </form>
            <div class="navbar-collapse collapse">
            <ul class="navbar-nav ms-auto">
            <li class="nav-item dropdown">
            <a href="#" data-bs-toggle="dropdown" class="nav-icon pe-md-0">
            <img src="/account.png" class="avatar img-fluid" alt="">
            </a>
            <div class="dropdown-menu dropdown-menu-end rounded">

            </div>
            </li>
            </ul>
            </div>
            </nav>*@
            <main class="content px-3 py-4">
                <div class="container-fluid">
                    <div class="mb-3">
                        <div style="display: flex;">
                            <h3 class="fw-bold fs-4 mb-3">Quản lý thể loại</h3>
                            <button class="btn btn-primary" style="height: fit-content; margin-left: 40px;" @onclick="ShowAddCategoryModal">Thêm thể loại</button>
                        </div>

                        <!-- Modal -->
                        <!-- Modal -->
                        <div class="modal" style="display: @(showAddCategoryModal || showEditCategoryModal ? "block":"" );">
                            <div class="modal-dialog modal-dialog-centered">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title">@((showAddCategoryModal ? "Thêm" : "Chỉnh sửa")) Thể Loại</h5>
                                        <button type="button" class="btn-close" @onclick="CloseModal" aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body">
                                        <form>
                                            <div class="mb-3">
                                                <label for="categoryName" class="form-label">Tên thể loại</label>
                                                <input type="text" class="form-control" id="categoryName" @bind="selectedCategory.Name" placeholder="Nhập tên thể loại">
                                            </div>
                                            <div class="mb-3">
                                                <label for="categoryDescription" class="form-label">Mô tả</label>
                                                <textarea class="form-control" id="categoryDescription" @bind="selectedCategory.Description" rows="3" placeholder="Nhập mô tả thể loại"></textarea>
                                            </div>
                                        </form>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" @onclick="CloseModal">Hủy</button>
                                        <button type="button" class="btn btn-primary" @onclick="@(showAddCategoryModal ? AddCategory : SaveEditedCategory)">@((showAddCategoryModal ? "Thêm" : "Lưu"))</button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="table-responsive">
                            <table class="table table-hover custom-table" style="width: 100%;">
                                <caption>@(lstTopic != null ? lstTopic.Count: 0) bản ghi</caption>
                                <thead>
                                <th scope="col" style="width: 5%;">STT</th>
                                <th scope="col" style="width: 15%;">Thể loại</th>
                                <th scope="col" style="width: 10%;">Số tác phẩm</th>
                                <th scope="col" style="width: 15%;">Ngày thêm</th>
                                <th scope="col" style="width: 30%;">Mô tả</th>
                                <th scope="col" style="width: 15%;">Hành động</th>
                                </thead>
                                <tbody class="table-group-divider">
                                    @if (lstTopic != null && lstTopic.Count >0)
                                    {
                                        @for (int i = 0; i < lstTopic.Count; i++)
                                        {
                                            var currentItem = lstTopic[i];
                                            <tr>
                                                <th scope="row">@(i+1)</th>
                                                <td>@currentItem.Name</td>
                                                <td>@currentItem.NumberStory</td>
                                                <td>@currentItem.CreatedDate</td>
                                                <td>@currentItem.Description</td>
                                                <td>
                                                    <button type="button" class="btn btn-success"
                                                            style="background-color: #1f6b0a;"
                                                            @onclick="() => OpenFormEditTopic(currentItem.Id)">
                                                        Sửa
                                                    </button>
                                                    <button type="button" class="btn btn-danger" style="background-color: #9e2828;"
                                                            @onclick="() => DeleteTopic(currentItem.Id)">
                                                        Xóa
                                                    </button>
                                                </td>
                                            </tr>
                                        }    
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </main>
        </div>
    </div>
</body>

@code {
    bool showAddCategoryModal = false;
    bool showEditCategoryModal = false;
    Topic selectedCategory = new Topic();

    private List<TopicFullInfor> lstTopic { get; set; }

    protected override async Task HandleAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await GetTopicList();
        }
    }

    private async Task GetTopicList()
    {
        lstTopic = await _topicService.GetAllTopicInfor();
        StateHasChanged();
    }

    void ShowAddCategoryModal()
    {
        showAddCategoryModal = true;
    }

    void ShowEditCategoryModal()
    {
        showEditCategoryModal = true;
    }

    void CloseModal()
    {
        showAddCategoryModal = false;
        showEditCategoryModal = false;
        //Để lại cái selectedCategory name với description là rỗng 
    }

    void AddCategory()
    {

        CloseModal();
    }

    void SaveEditedCategory()
    {

        CloseModal();
    }

    private async Task OpenFormEditTopic(Guid topicId)
    {
        
    }

    private async Task EditTopic(Guid topicId, string topicName)
    {
        var res = await _topicService.EditTopic(topicId, topicName);
        if (res != null && res.IsSuccess)
        {
            await ShowToast(res?.Data);
            await GetTopicList();
        }
        else
        {
            await ShowToast(res?.Message);
        }
    }

    private async Task DeleteTopic(Guid topicId)
    {
        var res = await _topicService.DeleteTopic(topicId);
        if (res != null && res.IsSuccess)
        {
            await ShowToast(res?.Data);
            await GetTopicList();
        }
        else
        {
            await ShowToast(res?.Message);
        }
    }

}
